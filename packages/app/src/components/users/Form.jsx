import HorizontalLabelledField from "components/form/HorizontalLabelledField.jsx";
import LabelledField from "components/form/LabelledField";
import NativeCheckbox from "components/form/NativeCheckbox";
import NativeInput from "components/form/NativeInput";
import NativeSelect from "components/form/NativeSelect";
import { useState } from "react";
import UserRoles from "../../models/UserRoles";
import PrimaryButton from "../ui/buttons/Primary";

const UserForm = ({ isEdit = false, user, userSetter: setUser, onFormSubmit }) => {
    const [passwordGenerationMethod, setPasswordGenerationMethod] = useState("autogenerated");

    const onFormChange = (ev) => {
        const target = ev.target;
        const name = target.name;
        const value = target.type === "checkbox" ? target.checked : target.value;
        setUser({ ...user, [name]: value });
    };

    return (
        <form onSubmit={onFormSubmit}>
            <fieldset>
                <legend>Basic information</legend>

                <HorizontalLabelledField
                    label="First name"
                    htmlFor="firstName"
                    control={
                        <NativeInput
                            id="firstName"
                            type="text"
                            name="first_name"
                            value={user.first_name || ""}
                            onChange={onFormChange}
                            required
                        />
                    }
                />
                <HorizontalLabelledField
                    label="Last name"
                    htmlFor="lastName"
                    control={
                        <NativeInput
                            id="lastName"
                            type="text"
                            name="last_name"
                            value={user.last_name || ""}
                            onChange={onFormChange}
                        />
                    }
                />
                <HorizontalLabelledField
                    label="Short bio"
                    htmlFor="shortBio"
                    control={
                        <NativeInput
                            type="text"
                            name="short_bio"
                            value={user.short_bio || ""}
                            onChange={onFormChange}
                            placeholder="DevSecOps, or Project Manager"
                        />
                    }
                />

                <HorizontalLabelledField
                    label="Username"
                    htmlFor="username"
                    control={
                        <NativeInput
                            type="text"
                            name="username"
                            id="username"
                            value={user.username || ""}
                            onChange={onFormChange}
                            autoFocus
                            required
                        />
                    }
                />
                <HorizontalLabelledField
                    label="Email"
                    htmlFor="email"
                    control={
                        <NativeInput
                            id="email"
                            name="email"
                            type="email"
                            value={user.email || ""}
                            onChange={onFormChange}
                            required
                        />
                    }
                />

                <HorizontalLabelledField
                    label="Role"
                    htmlFor="role"
                    control={
                        <NativeSelect id="role" name="role" onChange={onFormChange} value={user.role} required>
                            {UserRoles.map((role) => (
                                <option key={`role_${role.id}`} value={role.id}>
                                    {role.name}
                                </option>
                            ))}
                        </NativeSelect>
                    }
                />
                <HorizontalLabelledField
                    label="Properties"
                    control={
                        <div>
                            <NativeCheckbox name="active" checked={user.active} onChange={onFormChange}>
                                Active
                            </NativeCheckbox>
                            <NativeCheckbox name="mfa_enabled" checked={user.mfa_enabled} onChange={onFormChange}>
                                2FA enabled
                            </NativeCheckbox>
                        </div>
                    }
                />
            </fieldset>

            <LabelledField
                label=""
                control={
                    <div className="control">
                        <PrimaryButton type="submit">{isEdit ? "Update" : "Create"}</PrimaryButton>
                    </div>
                }
            />
        </form>
    );
};

export default UserForm;
